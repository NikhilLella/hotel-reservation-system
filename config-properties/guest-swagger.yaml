swagger: "2.0"
info:
  description: "This is a sample server Guest server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: " Guest service"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "nikhileswar_lella@epam.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/guests"
tags:
- name: "guest"
  description: "Everything about your guests"
 
schemes:
- "https"
- "http"
paths:
  /guest:
    post:
      tags:
      - "guest"
      summary: "Add a new guest "
      description: ""
      operationId: "addGuest"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Guest object that needs to be added "
        required: true
        schema:
          $ref: "#/definitions/GuestDTO"
      responses:
        "201":
          description: " Guest Created"
        "405":
          description: "Invalid input"
        "500":
          description: "Internal Server Error"
      
    put:
      tags:
      - "guest"
      summary: "Update an existing guest"
      description: ""
      operationId: "updateGuest"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Guest object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/GuestDTO"
      responses:
        "200":
          description: "success"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Guest  not found"
        "405":
          description: "Validation exception"
     
  /guest/{guestId}:
    get:
      tags:
      - "guest"
      summary: "Find guest by ID"
      description: "Returns a single guest"
      operationId: "findByGuestId"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "ID of guest to return"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/GuestDTO"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Guest not found"
  
    put:
      tags:
      - "guest"
      summary: "Updates a guest with form data"
      description: ""
      operationId: "updatePetbyId"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "ID of guest that needs to be updated"
        required: true
        type: "integer"
        format: "int32"
      - name: "name"
        in: "formData"
        description: "Updated name of the guest"
        required: false
        type: "string"
      - name: "proof"
        in: "formData"
        description: "Updated proof of the guest"
        required: false
        type: "string"
      - name: "stayHistory"
        in: "formData"
        description: "Updated stay history of the guest"
        required: false
        type: "string"
      - name: "address"
        in: "formData"
        description: "Updated address of the guest"
        required: false
        type: "string"
      - name: "mobileNumber"
        in: "formData"
        description: "Updated mobile number of the guest"
        required: false
        type: "string"
      responses:
        "405":
          description: "Invalid input"
     
    delete:
      tags:
      - "guest"
      summary: "Deletes a guest"
      description: ""
      operationId: "deleteGuest"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "Guest id to delete"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"

definitions:
 
  GuestDTO:
    type: "object"
    required:
    - "id"
    - "name"
    - "proof"
    - "address"
    - "stayHistory"
    - "mobileNumber"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      proof:
        type: "string"
      address:
        type : "string"
      stayHistory:
        type: "string"
      mobileNumber:
        type: "integer"
        format: "int64"
    